{"version":3,"sources":["Person/PersonRow.tsx","PeopleTable/PeopleTable.tsx","api/api.ts","PeoplePage.tsx","App.tsx","index.tsx"],"names":["PersonRow","people","history","useHistory","personSlug","useParams","map","person","className","cn","person__active","slug","key","name","onClick","personUrl","push","pathname","id","person_male","sex","person_female","born","died","motherName","fatherName","PeopleTable","useState","setPeople","useEffect","fetch","then","responce","json","data","index","PeoplePage","HomePage","App","to","exact","activeClassName","path","component","from","ReactDOM","render","document","getElementById"],"mappings":"qUASaA,G,MAA6B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrCC,EAAUC,cACRC,EAAeC,cAAfD,WASR,OACE,oCACGH,EAAOK,KAAI,SAACC,GAAD,OACV,wBACEC,UAAWC,IAAG,CACZF,QAAQ,EACRG,eAAgBH,EAAOI,OAASP,IAElCQ,IAAKL,EAAOM,KACZC,QAAS,kBAfKC,EAecR,EAAOI,UAdzCT,EAAQc,KAAK,CACXC,SAAS,WAAD,OAAaF,KAFJ,IAACA,IAiBd,4BAAKR,EAAOW,IACZ,wBACEV,UAAWC,IAAG,CACZU,YAA4B,MAAfZ,EAAOa,IACpBC,cAA8B,MAAfd,EAAOa,OAGvBb,EAAOM,MAEV,4BACGN,EAAOa,KAEV,4BAAKb,EAAOe,MACZ,4BAAKf,EAAOgB,MACZ,wBACEf,UAAU,iBAETD,EAAOiB,YAEV,wBACEhB,UAAU,eAETD,EAAOkB,mBC/CPC,G,MAAc,WAAO,IAAD,EACHC,mBAAmB,IADhB,mBACxB1B,EADwB,KAChB2B,EADgB,KAe/B,OAZAC,qBAAU,WCNHC,MAHO,qEAIXC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UDOxBF,MAAK,SAAAG,GAAI,OAAIN,EACZM,EAAK5B,KAAI,SAACC,EAAQ4B,GAAT,mBAAC,eAEH5B,GAFE,IAGLW,GAAIiB,EAAQ,aAInB,IAGD,oCACE,2BAAO3B,UAAU,UACf,+BACE,4BACE,kCACA,oCACA,mCACA,oCACA,oCACA,sCACA,wCAGJ,+BACE,kBAAC,EAAD,CAAWP,OAAQA,SE/BhBmC,EAAa,WACxB,OACE,oCACE,0CACA,kBAAC,EAAD,QCFAC,EAAW,kBAAM,qCAyCRC,EAvCH,kBACV,oCACE,yBAAK9B,UAAU,OACb,wBAAIA,UAAU,aACZ,4BACE,kBAAC,IAAD,CACE+B,GAAG,IACHC,OAAK,EACLhC,UAAU,YACViC,gBAAgB,qBAJlB,SASF,4BACE,kBAAC,IAAD,CACEF,GAAG,UACH/B,UAAU,YACViC,gBAAgB,qBAHlB,aAUN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIF,OAAK,EAACG,UAAWN,IACjC,kBAAC,IAAD,CAAUO,KAAK,QAAQL,GAAG,MAC1B,kBAAC,IAAD,CACEC,OAAK,EACLE,KAAK,uBACLC,UAAWP,IAEb,iDCrCNS,IAASC,OACP,kBAAC,IAAD,KAAY,kBAAC,EAAD,OACZC,SAASC,eAAe,W","file":"static/js/main.2ba4e6c7.chunk.js","sourcesContent":["import React from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport './Person.scss';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PersonRow: React.FC<Props> = ({ people }) => {\n  const history = useHistory();\n  const { personSlug } = useParams();\n\n\n  const handleChange = (personUrl: string) => {\n    history.push({\n      pathname: `/people/${personUrl}`,\n    });\n  };\n\n  return (\n    <>\n      {people.map((person: Person) => (\n        <tr\n          className={cn({\n            person: true,\n            person__active: person.slug === personSlug,\n          })}\n          key={person.name}\n          onClick={() => handleChange(person.slug)}\n        >\n          <td>{person.id}</td>\n          <td\n            className={cn({\n              person_male: person.sex === 'm',\n              person_female: person.sex === 'f',\n            })}\n          >\n            {person.name}\n          </td>\n          <td>\n            {person.sex}\n          </td>\n          <td>{person.born}</td>\n          <td>{person.died}</td>\n          <td\n            className=\"person_female\"\n          >\n            {person.motherName}\n          </td>\n          <td\n            className=\"person_male\"\n          >\n            {person.fatherName}\n          </td>\n        </tr>\n      ))}\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\n// import { NavLink, Route } from 'react-router-dom';\nimport { getPeople } from '../api/api';\nimport { PersonRow } from '../Person/PersonRow';\nimport './PeopleTable.scss';\n\nexport const PeopleTable = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    getPeople()\n      .then(data => setPeople(\n        data.map((person, index) => (\n          {\n            ...person,\n            id: index + 1,\n          }\n        )),\n      ));\n  }, []);\n\n  return (\n    <>\n      <table className=\"people\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n        <tbody>\n          <PersonRow people={people} />\n        </tbody>\n      </table>\n    </>\n  );\n};\n","const API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = (): Promise<Person[]> => {\n  return fetch(API_URL)\n    .then(responce => responce.json());\n};\n","import React from 'react';\n// import { NavLink, Route } from 'react-router-dom';\n\nimport { PeopleTable } from './PeopleTable/PeopleTable';\n\nexport const PeoplePage = () => {\n  return (\n    <>\n      <h2>PeoplePage</h2>\n      <PeopleTable />\n    </>\n  );\n};\n","import React from 'react';\nimport {\n  NavLink, Route, Switch, Redirect,\n} from 'react-router-dom';\nimport './App.scss';\nimport { PeoplePage } from './PeoplePage';\n\nconst HomePage = () => <h2>Home</h2>;\n\nconst App = () => (\n  <>\n    <nav className=\"nav\">\n      <ul className=\"nav__list\">\n        <li>\n          <NavLink\n            to=\"/\"\n            exact\n            className=\"nav__link\"\n            activeClassName=\"nav__link--active\"\n          >\n            Home\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            to=\"/people\"\n            className=\"nav__link\"\n            activeClassName=\"nav__link--active\"\n          >\n            People\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n    <Switch>\n      <Route path=\"/\" exact component={HomePage} />\n      <Redirect from=\"/home\" to=\"/\" />\n      <Route\n        exact\n        path=\"/people/:personSlug?\"\n        component={PeoplePage}\n      />\n      <h1>Page not found</h1>\n    </Switch>\n\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter><App /></HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}